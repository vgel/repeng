name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: install python
      uses: actions/setup-python@v2
      with:
        python-version: "3.11"

    - name: install black
      # make sure to keep this in sync with pyproject.toml
      run: |
        pip install "black>=24.2.0,<25.0.0"

    - name: Check formatting with Black
      run: |
        black --check .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v2

    - name: install python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: install poetry
      run: |
        pip install poetry

    - name: cache poetry
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pypoetry
          !~/.cache/pypoetry/artifacts
          !~/.cache/pypoetry/repositories
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ matrix.python-version }}-

    - name: install dependencies
      run: |
        poetry install

    - name: cache huggingface
      uses: actions/cache@v2
      with:
        path: ~/.cache/huggingface
        key: ${{ runner.os }}-hf-models-${{ hashFiles('**/lockfiles') }}
        restore-keys: |
          ${{ runner.os }}-hf-models-

    - name: run pytest
      run: |
        poetry run pytest
